{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/kavithadaiya/DATA-DEDUPLICATION/blob/main/data_deduplication.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nWOtDNqivHIf"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import time\n",
        "import os\n",
        "\n",
        "from sklearn.metrics import f1_score, accuracy_score\n",
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "flEFM40R961p"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.read_csv(\"Input.csv\")\n",
        "data['is_duplicate'].value_counts().plot(kind='bar')"
      ],
      "metadata": {
        "id": "IBijgxIgvLd_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 442
        },
        "outputId": "56bb8a9e-25e5-46cd-b19c-ca8de33a741d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 2
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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3HjjjYM0NgAwXJV05eOFF16Iyy+/PD7zmc/ElClTYubMmbFt27bi/jfeeCM6OjqioaGhuFZZWRlXXnlltLa2nvCcvb290d3d3W8DAM5cJcXH66+/Hlu2bIkLLrggfvzjH8cXv/jF+PKXvxw7duyIiIiOjo6IiKiqqup3v6qqquK+/9Tc3ByVlZXFraamZiA/BwAwTJQUH319fTFr1qy4//77Y+bMmbFs2bK47bbbYuvWrQMeoKmpKbq6uopbe3v7gM8FAJz+SoqPqVOnxkUXXdRv7cILL4yDBw9GRER1dXVERHR2dvY7prOzs7jvP5WXl0dFRUW/DQA4c5UUH/PmzYsDBw70W3v11VfjAx/4QET8682n1dXV0dLSUtzf3d0de/bsifr6+kEYFwAY7kr6bZcVK1bE3Llz4/77748bbrgh9u7dG48++mg8+uijERFRVlYWy5cvj3vvvTcuuOCCqK2tjdWrV8e0adNi0aJFp2J+AGCYKSk+rrjiinjuueeiqakp1q5dG7W1tbFhw4ZYsmRJ8Zg777wzenp6YtmyZXHkyJG46qqrYufOnTFmzJhBHx4AGH5Kio+IiOuuuy6uu+66/7q/rKws1q5dG2vXrj2pwQCAM5PvdgEAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACDVScXHAw88EGVlZbF8+fLi2tGjR6OxsTEmTZoU5557bixevDg6OztPdk4A4Awx4Ph4+eWX49vf/nZ85CMf6be+YsWKePHFF+PZZ5+NXbt2xaFDh+L6668/6UEBgDPDgOLjH//4RyxZsiS2bdsW5513XnG9q6srHnvssXjooYfi6quvjtmzZ8f27dvjpZdeit27dw/a0ADA8DWg+GhsbIxrr702Ghoa+q23tbXFsWPH+q3X1dXF9OnTo7W19eQmBQDOCKNKvcMzzzwT+/bti5dffvkd+zo6OuKcc86JCRMm9FuvqqqKjo6OE56vt7c3ent7i7e7u7tLHQkAGEZKuvLR3t4eX/nKV+Kpp56KMWPGDMoAzc3NUVlZWdxqamoG5bwAwOmppPhoa2uLw4cPx6xZs2LUqFExatSo2LVrV2zcuDFGjRoVVVVV8fbbb8eRI0f63a+zszOqq6tPeM6mpqbo6uoqbu3t7QP+YQCA019JL7tcc8018dvf/rbf2tKlS6Ouri6+/vWvR01NTYwePTpaWlpi8eLFERFx4MCBOHjwYNTX15/wnOXl5VFeXj7A8QGA4aak+Bg/fnxcfPHF/dbGjRsXkyZNKq7feuutsXLlypg4cWJUVFTEHXfcEfX19TFnzpzBmxoAGLZKfsPpe3n44YdjxIgRsXjx4ujt7Y0FCxbE5s2bB/thAIBh6qTj4+c//3m/22PGjIlNmzbFpk2bTvbUAMAZyHe7AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpSoqP5ubmuOKKK2L8+PExZcqUWLRoURw4cKDfMUePHo3GxsaYNGlSnHvuubF48eLo7Owc1KEBgOGrpPjYtWtXNDY2xu7du+MnP/lJHDt2LD7xiU9ET09P8ZgVK1bEiy++GM8++2zs2rUrDh06FNdff/2gDw4ADE+jSjl4586d/W4/8cQTMWXKlGhra4v58+dHV1dXPPbYY/H000/H1VdfHRER27dvjwsvvDB2794dc+bMGbzJAYBh6aTe89HV1RURERMnToyIiLa2tjh27Fg0NDQUj6mrq4vp06dHa2vryTwUAHCGKOnKx//V19cXy5cvj3nz5sXFF18cEREdHR1xzjnnxIQJE/odW1VVFR0dHSc8T29vb/T29hZvd3d3D3QkAGAYGPCVj8bGxvjd734XzzzzzEkN0NzcHJWVlcWtpqbmpM4HAJzeBhQft99+e/zgBz+In/3sZ3H++ecX16urq+Ptt9+OI0eO9Du+s7MzqqurT3iupqam6OrqKm7t7e0DGQkAGCZKio9CoRC33357PPfcc/HTn/40amtr++2fPXt2jB49OlpaWoprBw4ciIMHD0Z9ff0Jz1leXh4VFRX9NgDgzFXSez4aGxvj6aefju9///sxfvz44vs4KisrY+zYsVFZWRm33nprrFy5MiZOnBgVFRVxxx13RH19vd90AQAiosT42LJlS0REfPzjH++3vn379rj55psjIuLhhx+OESNGxOLFi6O3tzcWLFgQmzdvHpRhAYDhr6T4KBQK73nMmDFjYtOmTbFp06YBDwUAnLl8twsAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkEp8AACpxAcAkOqUxcemTZtixowZMWbMmLjyyitj7969p+qhAIBh5JTEx3e/+91YuXJl3H333bFv37649NJLY8GCBXH48OFT8XAAwDBySuLjoYceittuuy2WLl0aF110UWzdujXe9773xeOPP34qHg4AGEZGDfYJ33777Whra4umpqbi2ogRI6KhoSFaW1vfcXxvb2/09vYWb3d1dUVERHd392CPdtrr6/3nUI9AorPxz/jZzPP77HI2Pr///TMXCoX3PHbQ4+PNN9+M48ePR1VVVb/1qqqq+OMf//iO45ubm+Oee+55x3pNTc1gjwanlcoNQz0BcKqczc/vt956KyorK9/1mEGPj1I1NTXFypUri7f7+vrib3/7W0yaNCnKysqGcDIydHd3R01NTbS3t0dFRcVQjwMMIs/vs0uhUIi33norpk2b9p7HDnp8TJ48OUaOHBmdnZ391js7O6O6uvodx5eXl0d5eXm/tQkTJgz2WJzmKioq/M8JzlCe32eP97ri8W+D/obTc845J2bPnh0tLS3Ftb6+vmhpaYn6+vrBfjgAYJg5JS+7rFy5Mm666aa4/PLL46Mf/Whs2LAhenp6YunSpafi4QCAYeSUxMdnP/vZ+Otf/xpr1qyJjo6OuOyyy2Lnzp3veBMqlJeXx9133/2Ol96A4c/zm/+mrPC//E4MAMAg8d0uAEAq8QEApBIfAEAq8QEApBIfAECqIf94dc4ub775Zjz++OPR2toaHR0dERFRXV0dc+fOjZtvvjne//73D/GEAJxqrnyQ5uWXX44PfehDsXHjxqisrIz58+fH/Pnzo7KyMjZu3Bh1dXXxyiuvDPWYwCnS3t4et9xyy1CPwWnA53yQZs6cOXHppZfG1q1b3/GlgYVCIb7whS/Eb37zm2htbR2iCYFTaf/+/TFr1qw4fvz4UI/CEPOyC2n2798fTzzxxAm/rbisrCxWrFgRM2fOHILJgMHwwgsvvOv+119/PWkSTnfigzTV1dWxd+/eqKurO+H+vXv3+gh+GMYWLVoUZWVl8W4X1E/0jw/OPuKDNF/96ldj2bJl0dbWFtdcc00xNDo7O6OlpSW2bdsWDz744BBPCQzU1KlTY/PmzbFw4cIT7v/1r38ds2fPTp6K05H4IE1jY2NMnjw5Hn744di8eXPxdd+RI0fG7Nmz44knnogbbrhhiKcEBmr27NnR1tb2X+Pjva6KcPbwhlOGxLFjx+LNN9+MiIjJkyfH6NGjh3gi4GT94he/iJ6envjkJz95wv09PT3xyiuvxMc+9rHkyTjdiA8AIJXP+QAAUokPACCV+AAAUokPACCV+AAAUokPACCV+AAAUokPACDV/wM7GTxefszQwAAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data"
      ],
      "metadata": {
        "id": "j7WX2fWxvNdR",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "outputId": "e455d54f-9601-4464-f32b-957233b1f3ac"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               ln         dob gn          fn  is_duplicate\n",
              "0        SMITH JR  01-03-1968  F     WILLIAM             0\n",
              "1    ROTHMEYER JR  01-03-1968  F     WILLIAM             0\n",
              "2       BLAND III  21-02-1962  F     WILLIAM             1\n",
              "3        BLAND JR  21-02-1962  F        BILL             0\n",
              "4           BLAND  21-02-1962  F     WILLIAM             1\n",
              "..            ...         ... ..         ...           ...\n",
              "144       PRERNA   17-11-1945  F     CHOPRA              0\n",
              "145       PRERNA   07-10-1937  F  BHENDARKAR             0\n",
              "146       PRERNA   07-10-1937  F  BHENDARKAR             1\n",
              "147        ANSHUL  20-10-1953  F      SHARMA             0\n",
              "148        ANSHUL  25-10-1953  M      SINGH              0\n",
              "\n",
              "[149 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f62f3a02-ea8b-4317-a977-a08b970a759f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ln</th>\n",
              "      <th>dob</th>\n",
              "      <th>gn</th>\n",
              "      <th>fn</th>\n",
              "      <th>is_duplicate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>SMITH JR</td>\n",
              "      <td>01-03-1968</td>\n",
              "      <td>F</td>\n",
              "      <td>WILLIAM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>ROTHMEYER JR</td>\n",
              "      <td>01-03-1968</td>\n",
              "      <td>F</td>\n",
              "      <td>WILLIAM</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BLAND III</td>\n",
              "      <td>21-02-1962</td>\n",
              "      <td>F</td>\n",
              "      <td>WILLIAM</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BLAND JR</td>\n",
              "      <td>21-02-1962</td>\n",
              "      <td>F</td>\n",
              "      <td>BILL</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>BLAND</td>\n",
              "      <td>21-02-1962</td>\n",
              "      <td>F</td>\n",
              "      <td>WILLIAM</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>144</th>\n",
              "      <td>PRERNA</td>\n",
              "      <td>17-11-1945</td>\n",
              "      <td>F</td>\n",
              "      <td>CHOPRA</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145</th>\n",
              "      <td>PRERNA</td>\n",
              "      <td>07-10-1937</td>\n",
              "      <td>F</td>\n",
              "      <td>BHENDARKAR</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>146</th>\n",
              "      <td>PRERNA</td>\n",
              "      <td>07-10-1937</td>\n",
              "      <td>F</td>\n",
              "      <td>BHENDARKAR</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>147</th>\n",
              "      <td>ANSHUL</td>\n",
              "      <td>20-10-1953</td>\n",
              "      <td>F</td>\n",
              "      <td>SHARMA</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>148</th>\n",
              "      <td>ANSHUL</td>\n",
              "      <td>25-10-1953</td>\n",
              "      <td>M</td>\n",
              "      <td>SINGH</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>149 rows × 5 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f62f3a02-ea8b-4317-a977-a08b970a759f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f62f3a02-ea8b-4317-a977-a08b970a759f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f62f3a02-ea8b-4317-a977-a08b970a759f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6dccfdd8-d47a-4092-a902-8474aa50397a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6dccfdd8-d47a-4092-a902-8474aa50397a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-
